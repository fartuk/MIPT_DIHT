//–§–∞—Ç—Ç–∞—Ö–æ–≤
//–ü–æ–ª–Ω—ã–π –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤–∑–≤–µ—à–µ–Ω–Ω—ã–π –≥—Ä–∞—Ñ –∑–∞–¥–∞–Ω –º–∞—Ç—Ä–∏—Ü–µ–π —Å–º–µ–∂–Ω–æ—Å—Ç–∏. –ü–æ—Å—Ç—Ä–æ–π—Ç–µ –º–∞—Ç—Ä–∏—Ü—É
//–∫—Ä–∞—Ç—á–∞–π—à–∏—Ö –ø—É—Ç–µ–π –º–µ–∂–¥—É –µ–≥–æ –≤–µ—Ä—à–∏–Ω–∞–º–∏.
//–ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ –≤ –≥—Ä–∞—Ñ–µ –Ω–µ—Ç —Ü–∏–∫–ª–æ–≤ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–≥–æ –≤–µ—Å–∞.
//–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
//–í –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ –≤–≤–æ–¥–∏—Ç—Å—è –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ ùëÅ (1 6 ùëÅ 6 100) ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–µ—Ä—à–∏–Ω –≥—Ä–∞—Ñ–∞. –í
//—Å–ª–µ–¥—É—é—â–∏—Ö ùëÅ —Å—Ç—Ä–æ–∫–∞—Ö –ø–æ ùëÅ —á–∏—Å–µ–ª –∑–∞–¥–∞–µ—Ç—Å—è –º–∞—Ç—Ä–∏—Ü–∞ —Å–º–µ–∂–Ω–æ—Å—Ç–∏ –≥—Ä–∞—Ñ–∞ (ùëó-–æ–µ —á–∏—Å–ª–æ –≤ ùëñ-–æ–π —Å—Ç—Ä–æ–∫–µ ‚Äî
//–≤–µ—Å —Ä–µ–±—Ä–∞ –∏–∑ –≤–µ—Ä—à–∏–Ω—ã ùëñ –≤ –≤–µ—Ä—à–∏–Ω—É ùëó). –í—Å–µ —á–∏—Å–ª–∞ –ø–æ –º–æ–¥—É–ª—é –Ω–µ –ø—Ä–µ–≤—ã—à–∞—é—Ç 100. –ù–∞ –≥–ª–∞–≤–Ω–æ–π –¥–∏–∞–≥–æ–Ω–∞–ª–∏
//–º–∞—Ç—Ä–∏—Ü—ã ‚Äî –≤—Å–µ–≥–¥–∞ –Ω—É–ª–∏.
//–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
//–í—ã–≤–µ–¥–∏—Ç–µ ùëÅ —Å—Ç—Ä–æ–∫ –ø–æ ùëÅ —á–∏—Å–µ–ª ‚Äî –º–∞—Ç—Ä–∏—Ü—É —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–π –º–µ–∂–¥—É –ø–∞—Ä–∞–º–∏ –≤–µ—Ä—à–∏–Ω, –≥–¥–µ ùëó-–æ–µ —á–∏—Å–ª–æ –≤
//ùëñ-–æ–π —Å—Ç—Ä–æ–∫–µ —Ä–∞–≤–Ω–æ –≤–µ—Å—É –∫—Ä–∞—Ç—á–∞–π—à–µ–≥–æ –ø—É—Ç–∏ –∏–∑ –≤–µ—Ä—à–∏–Ω—ã ùëñ –≤ ùëó.

#include <iostream>
#include <vector>
#include <fstream>

using std::vector;
using std::cin;
using std::cout;

int main(){
    std::ifstream fin("floyd.in");
    std::ofstream fout("floyd.out");
    vector< vector<float> > matrix;
    int vert_num = 0;
    fin >> vert_num;
    // –í–≤–æ–¥ –º–∞—Ç—Ä–∏—Ü—ã —Å–º–µ–∂–Ω–æ—Å—Ç–∏.
    for (int i = 0; i < vert_num; ++i) {
        vector<float> tmp_vector;
        matrix.push_back(tmp_vector);
        for (int j = 0; j < vert_num; ++j) {
            float tmp_edge;
            fin >> tmp_edge;
            matrix[i].push_back(tmp_edge);
        }
    }

    // –§–ª–æ–π–¥: –Ω–∞ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ, –µ—Å–ª–∏ —É–ª—É—á—à–∏–ª–æ—Å—å, –∏–∑–º–µ–Ω—è–µ–º.
    for (int i = 0; i < vert_num; ++i) {
        for (int j = 0; j < vert_num; ++j) {
            for (int k = 0; k < vert_num; ++k) {
                matrix[j][k] = std::min(matrix[j][k], matrix[j][i] + matrix[i][k]);
            }
        }
    }

    // –í—ã–≤–æ–¥ –ø–æ–ª—É—á–∏–≤—à–µ–π—Å—è –º–∞—Ç—Ä–∏—Ü—ã.
    for (int i = 0; i < vert_num; ++i) {
        for (int j = 0; j < vert_num; ++j) {
            fout << matrix[i][j];
            if (j != vert_num - 1) {
                fout << " ";
            }
        }
        if (i != vert_num - 1) {
            fout << "\n";
        }
    }
    fin.close();
    fout.close();
    return 0;
}